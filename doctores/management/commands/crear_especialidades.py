from django.core.management.base import BaseCommand
from doctores.models import Especialidad

class Command(BaseCommand):
    help = 'Crear especialidades m√©dicas b√°sicas para el sistema'
    
    def handle(self, *args, **options):
        especialidades = [
            {
                'nombre': 'Medicina General',
                'descripcion': 'Atenci√≥n m√©dica general y preventiva'
            },
            {
                'nombre': 'Cardiolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa del coraz√≥n y sistema cardiovascular'
            },
            {
                'nombre': 'Dermatolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa de la piel y sus enfermedades'
            },
            {
                'nombre': 'Pediatr√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa de la salud de ni√±os y adolescentes'
            },
            {
                'nombre': 'Ginecolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa de la salud del aparato reproductor femenino'
            },
            {
                'nombre': 'Traumatolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa de lesiones del sistema musculoesquel√©tico'
            },
            {
                'nombre': 'Oftalmolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa de los ojos y la visi√≥n'
            },
            {
                'nombre': 'Otorrinolaringolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa de o√≠do, nariz y garganta'
            },
            {
                'nombre': 'Neurolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa del sistema nervioso'
            },
            {
                'nombre': 'Psiquiatr√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa de la salud mental'
            },
            {
                'nombre': 'Endocrinolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa del sistema endocrino y hormonas'
            },
            {
                'nombre': 'Gastroenterolog√≠a',
                'descripcion': 'Especialidad m√©dica que se ocupa del sistema digestivo'
            },
        ]
        
        self.stdout.write(
            self.style.SUCCESS('=== Creando Especialidades M√©dicas ===\n')
        )
        
        creadas = 0
        existentes = 0
        
        for esp_data in especialidades:
            especialidad, created = Especialidad.objects.get_or_create(
                nombre=esp_data['nombre'],
                defaults={
                    'descripcion': esp_data['descripcion'],
                    'activa': True
                }
            )
            
            if created:
                creadas += 1
                self.stdout.write(
                    f'‚úÖ Creada: {especialidad.nombre}'
                )
            else:
                existentes += 1
                self.stdout.write(
                    f'‚ÑπÔ∏è  Ya existe: {especialidad.nombre}'
                )
        
        self.stdout.write(
            self.style.SUCCESS(
                f'\nüìä Resumen:\n'
                f'   - Especialidades creadas: {creadas}\n'
                f'   - Especialidades existentes: {existentes}\n'
                f'   - Total especialidades: {creadas + existentes}\n'
            )
        ) 